--- a/Config.in
+++ b/Config.in
@@ -140,6 +140,17 @@ config MBEDTLS_ECP_DP_CURVE448_ENABLED
 
 comment "Build Options - unselect features to reduce binary size"
 
+config MBEDTLS_AESCE_C
+	bool
+	default y
+	prompt "Enable use of the ARMv8 Crypto Extensions"
+	depends on aarch64 && !TARGET_bcm27xx
+	help
+	 Use of the ARMv8 Crypto Extensions greatly increase performance
+	 (up to 4x faster on AES-GCM while 10x faster on raw AES).
+
+	 If you don't sure, say Y here.
+
 config MBEDTLS_CIPHER_MODE_OFB
 	bool "MBEDTLS_CIPHER_MODE_OFB"
 	default n
@@ -151,10 +162,33 @@ config MBEDTLS_CIPHER_MODE_XTS
 config MBEDTLS_DEBUG_C
 	bool "MBEDTLS_DEBUG_C"
 	default n
+	help
+	 This option enables mbedtls library's debug functions.
+
+	 It increases the uncompressed libmbedtls binary size
+	 by around 60 KiB (for an ARMv5 platform).
+
+	 Usually, you don't need this, so don't select this if you're unsure.
+
+config MBEDTLS_HAVE_SSE2
+	bool
+	default y
+	prompt "Enable use of x86 SSE2 instructions"
+	depends on TARGET_x86_generic || TARGET_x86_64
+	help
+	 Use of SSE2 instructions greatly increase performance (up to
+	 3x faster) with a minimum (~0.2%, or 23KB) increase in package
+	 size, but it will bring no benefit if your hardware does not
+	 support them, such as Geode GX and LX.  In this case you may
+	 save 23KB by saying yes here.  AMD Geode NX, and Intel
+	 Pentium 4 and above support SSE2.
 
 config MBEDTLS_HKDF_C
-	bool "MBEDTLS_HKDF_C"
-	default n
+	bool "MBEDTLS_HKDF_C (RFC 5869)"
+ 	default n
+	help
+	 This option adds support for the Hashed Message Authentication Code
+	 (HMAC)-based key derivation function (HKDF).
 
 config MBEDTLS_PLATFORM_C
 	bool "MBEDTLS_PLATFORM_C"
@@ -186,6 +220,16 @@ config MBEDTLS_DEPRECATED_WARNING
 	bool "MBEDTLS_DEPRECATED_WARNING"
 	default n
 
+config MBEDTLS_SHA256_USE_ARMV8_A_CRYPTO_IF_PRESENT
+	bool "MBEDTLS_SHA256_USE_ARMV8_A_CRYPTO_IF_PRESENT"
+	default y
+	depends on aarch64 && !TARGET_bcm27xx_bcm2710 && !TARGET_bcm27xx_bcm2711
+
+config MBEDTLS_SHA512_USE_A64_CRYPTO_IF_PRESENT
+	bool "MBEDTLS_SHA512_USE_A64_CRYPTO_IF_PRESENT"
+	default y
+	depends on aarch64 && !TARGET_bcm27xx_bcm2710 && !TARGET_bcm27xx_bcm2711
+
 config MBEDTLS_SSL_PROTO_TLS1_2
 	bool "MBEDTLS_SSL_PROTO_TLS1_2"
 	default y
--- a/Makefile
+++ b/Makefile
@@ -63,10 +63,12 @@ MBEDTLS_BUILD_OPTS_CIPHERS= \
 MBEDTLS_BUILD_OPTS= \
   $(MBEDTLS_BUILD_OPTS_CURVES) \
   $(MBEDTLS_BUILD_OPTS_CIPHERS) \
+  CONFIG_MBEDTLS_AESCE_C \
   CONFIG_MBEDTLS_CIPHER_MODE_OFB \
   CONFIG_MBEDTLS_CIPHER_MODE_XTS \
   CONFIG_MBEDTLS_DEBUG_C \
   CONFIG_MBEDTLS_ENTROPY_FORCE_SHA256 \
+  CONFIG_MBEDTLS_HAVE_SSE2 \
   CONFIG_MBEDTLS_HKDF_C \
   CONFIG_MBEDTLS_PLATFORM_C \
   CONFIG_MBEDTLS_SELF_TEST \
@@ -77,6 +79,8 @@ MBEDTLS_BUILD_OPTS= \
   CONFIG_MBEDTLS_VERSION_FEATURES \
   CONFIG_MBEDTLS_PSA_CRYPTO_CLIENT \
   CONFIG_MBEDTLS_DEPRECATED_WARNING \
+  CONFIG_MBEDTLS_SHA256_USE_ARMV8_A_CRYPTO_IF_PRESENT \
+  CONFIG_MBEDTLS_SHA512_USE_A64_CRYPTO_IF_PRESENT \
   CONFIG_MBEDTLS_SSL_PROTO_TLS1_2 \
   CONFIG_MBEDTLS_SSL_PROTO_TLS1_3 \
   CONFIG_MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE
