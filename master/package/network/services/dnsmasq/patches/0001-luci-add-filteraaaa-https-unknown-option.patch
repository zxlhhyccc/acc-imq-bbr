--- a/htdocs/luci-static/resources/view/network/dhcp.js
+++ b/htdocs/luci-static/resources/view/network/dhcp.js
@@ -398,6 +398,25 @@ return view.extend({
 		s.tab('ipsets', _('IP Sets'));
 		s.tab('relay', _('Relay'));
 		s.tab('pxe_tftp', _('PXE/TFTP'));
+		//s.tab('custom_domain', _('Custom Redirect Domain'));
+
+		//o = s.taboption('custom_domain', form.SectionValue, 'domain', form.GridSection, 'domain', null,
+			//_('Define a custom domain name and the corresponding PTR record'));
+
+		//ss = o.subsection;
+
+		//ss.addremove = true;
+		//ss.anonymous = true;
+
+		//so = ss.option(form.Value, 'name', _('Domain name'));
+		//so.datatype = 'hostname';
+		//so.rmempty  = true;
+
+		//so = ss.option(form.Value, 'ip', _('<abbr title=\"Internet Protocol Version 4\">IPv4</abbr>-Address'));
+		//so.datatype = 'or(ip4addr,"ignore")';
+
+		//so = ss.option(form.Value, 'comments', _('Comments'));
+		//so.rmempty  = true;
 
 		o = s.taboption('cache', form.MultiValue, 'cache_rr',
 			_('Cache arbitrary RR'), _('By default, dnsmasq caches A, AAAA, CNAME and SRV DNS record types.') + '<br/>' +
@@ -415,6 +434,10 @@ return view.extend({
 			_('Never forward DNS queries which lack dots or domain parts.') + '<br />' +
 			customi18n(_('Names not in {etc_hosts} are answered {not_found}.') )
 		);
+		s.taboption('general', form.Flag, 'dns_redirect',
+			_('DNS Redirect'),
+			_('Force redirect all local DNS queries to DNSMasq, a.k.a. DNS Hijacking.'));
+
 		s.taboption('general', form.Flag, 'authoritative',
 			_('Authoritative'),
 			_('This is the only DHCP server in the local network.'));
@@ -667,6 +690,16 @@ return view.extend({
 			_('Allocate IP addresses sequentially, starting from the lowest available address.'));
 		o.optional = true;
 
+		//o = s.taboption('filteropts', form.Flag, 'filter_https',
+			//_('Disable HTTPS DNS Type forwards'),
+			//_('Filter HTTPS DNS Query Type Name Resolve'));
+		//o.optional = true;
+
+		//o = s.taboption('filteropts', form.Flag, 'filter_unknown',
+			//_('Disable Unknown DNS Type forwards'),
+			//_('Filter Unknown DNS Query Type Name Resolve'));
+		//o.optional = true;
+
 		o = s.taboption('filteropts', form.Flag, 'boguspriv',
 			_('Filter private'),
 			customi18n(
@@ -689,6 +722,7 @@ return view.extend({
 			_('Filter IPv4 A records'),
 			_('Remove IPv4 addresses from the results and only return IPv6 addresses.'));
 		o.optional = true;
+		o.depends('filter_aaaa', '0');
 
 		o = s.taboption('filteropts', form.MultiValue, 'filter_rr',
 			_('Filter arbitrary RR'), _('Removes records of the specified type(s) from answers.'));
@@ -843,6 +877,13 @@ return view.extend({
 		o.optional = true;
 		o.placeholder = 3600;
 
+		//o = s.taboption('limits', form.Value, 'mini_ttl',
+			//_('Minimum TTL to send to clients'),
+			//_('Modify DNS entries minimum TTL (max is 86400, 0 is no modify)'));
+		//o.optional = true;
+		//o.datatype = 'range(0,86400)';
+		//o.placeholder = 0;
+
 		o = s.taboption('pxe_tftp', form.Flag, 'enable_tftp',
 			_('Enable TFTP server'),
 			_('Enable the built-in single-instance TFTP server.'));
