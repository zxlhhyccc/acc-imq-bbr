--- a/htdocs/luci-static/resources/view/network/dhcp.js
+++ b/htdocs/luci-static/resources/view/network/dhcp.js
@@ -261,6 +261,29 @@ return view.extend({
 		s.tab('srvhosts', _('SRV'));
 		s.tab('mxhosts', _('MX'));
 		s.tab('ipsets', _('IP Sets'));
+		s.tab('custom_domain', _('Custom Redirect Domain'));
+
+		o = s.taboption('custom_domain', form.SectionValue, '__domain__', form.GridSection, 'domain', null,
+			_('Define a custom domain name and the corresponding PTR record'));
+
+		ss = o.subsection;
+
+		ss.addremove = true;
+		ss.anonymous = true;
+
+		so = ss.option(form.Value, 'name', _('Domain name'));
+		so.datatype = 'hostname';
+		so.rmempty  = true;
+
+		so = ss.option(form.Value, 'ip', _('<abbr title=\"Internet Protocol Version 4\">IPv4</abbr>-Address'));
+		so.datatype = 'or(ip4addr,"ignore")';
+
+		so = ss.option(form.Value, 'comments', _('Comments'));
+		so.rmempty  = true;
+
+		s.taboption('general', form.Flag, 'dns_redirect',
+			_('DNS Redirect'),
+			_('Redirect client DNS to dnsmasq'));
 
 		s.taboption('general', form.Flag, 'domainneeded',
 			_('Domain required'),
@@ -436,6 +459,16 @@ return view.extend({
 		o.optional = true;
 		o.placeholder = '/etc/dnsmasq.hosts';
 
+		o = s.taboption('advanced', form.Flag, 'filter_https',
+			_('Disable HTTPS DNS Type forwards'),
+			_('Filter HTTPS DNS Query Type Name Resolve'));
+		o.optional = true;
+
+		o = s.taboption('advanced', form.Flag, 'filter_unknown',
+			_('Disable Unknown DNS Type forwards'),
+			_('Filter Unknown DNS Query Type Name Resolve'));
+		o.optional = true;
+
 		o = s.taboption('advanced', form.Flag, 'quietdhcp',
 			_('Suppress logging'),
 			_('Suppress logging of the routine operation for the DHCP protocol.'));
@@ -466,6 +499,7 @@ return view.extend({
 			_('Filter IPv4 A records'),
 			_('Remove IPv4 addresses from the results and only return IPv6 addresses.'));
 		o.optional = true;
+		o.depends('filter_aaaa', '0');
 
 		s.taboption('advanced', form.Flag, 'localise_queries',
 			_('Localise queries'),
@@ -555,6 +589,13 @@ return view.extend({
 		o.datatype = 'range(0,10000)';
 		o.placeholder = 150;
 
+		o = s.taboption('advanced', form.Value, 'mini_ttl',
+			_('Minimum TTL to send to clients'),
+			_('Modify DNS entries minimum TTL (max is 86400, 0 is no modify)'));
+		o.optional = true;
+		o.datatype = 'range(0,86400)';
+		o.placeholder = 0;
+
 		o = s.taboption('pxe_tftp', form.Flag, 'enable_tftp',
 			_('Enable TFTP server'),
 			_('Enable the built-in single-instance TFTP server.'));
