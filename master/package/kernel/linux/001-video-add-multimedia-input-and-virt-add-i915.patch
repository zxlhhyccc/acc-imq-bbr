--- a/modules/video.mk
+++ b/modules/video.mk
@@ -246,6 +246,45 @@ endef
 $(eval $(call KernelPackage,fb-tft-ili9486))
 
 
+define KernelPackage/media-core
+  SUBMENU:=$(VIDEO_MENU)
+  TITLE=Multimedia support
+  HIDDEN:=1
+  KCONFIG:= \
+	CONFIG_MEDIA_SUPPORT \
+	CONFIG_MEDIA_CONTROLLER=y \
+	CONFIG_MEDIA_CAMERA_SUPPORT=y \
+	CONFIG_MEDIA_PLATFORM_DRIVERS=y
+  FILES:=$(LINUX_DIR)/drivers/media/mc/mc.ko
+  AUTOLOAD:=$(call AutoProbe,mc)
+endef
+
+define KernelPackage/media-core/description
+  Kernel modules for media controller support
+endef
+
+$(eval $(call KernelPackage,media-core))
+
+
+define KernelPackage/multimedia-input
+  SUBMENU:=$(VIDEO_MENU)
+  TITLE:=Multimedia input support
+  DEPENDS:=+kmod-input-core
+  KCONFIG:=CONFIG_RC_CORE \
+	CONFIG_LIRC=y \
+	CONFIG_RC_DECODERS=y \
+	CONFIG_RC_DEVICES=y
+  FILES:=$(LINUX_DIR)/drivers/media/rc/rc-core.ko
+  AUTOLOAD:=$(call AutoProbe,rc-core)
+endef
+
+define KernelPackage/multimedia-input/description
+  Enable multimedia input.
+endef
+
+$(eval $(call KernelPackage,multimedia-input))
+
+
 define KernelPackage/drm
   SUBMENU:=$(VIDEO_MENU)
   TITLE:=Direct Rendering Manager (DRM) support
@@ -486,6 +525,37 @@ endef
 
 $(eval $(call KernelPackage,drm-imx-ldb))
 
+define KernelPackage/drm-lima
+  SUBMENU:=$(VIDEO_MENU)
+  TITLE:=DRM support for ARM Mali 400/450 GPU
+  DEPENDS:=@(TARGET_rockchip||TARGET_sunxi) +kmod-drm-sched
+  KCONFIG:=CONFIG_DRM_LIMA
+  FILES:=$(LINUX_DIR)/drivers/gpu/drm/lima/lima.ko
+  AUTOLOAD:=$(call AutoProbe,lima)
+endef
+
+define KernelPackage/drm-lima/description
+  DRM driver for ARM Mali 400/450 GPUs
+endef
+
+$(eval $(call KernelPackage,drm-lima))
+
+define KernelPackage/drm-panfrost
+  SUBMENU:=$(VIDEO_MENU)
+  TITLE:=DRM support for ARM Mali Midgard/Bifrost GPUs
+  DEPENDS:=@(TARGET_rockchip||TARGET_sunxi) +kmod-drm-sched
+  KCONFIG:=CONFIG_DRM_PANFROST
+  FILES:=$(LINUX_DIR)/drivers/gpu/drm/panfrost/panfrost.ko
+  AUTOLOAD:=$(call AutoProbe,panfrost)
+endef
+
+define KernelPackage/drm-panfrost/description
+  DRM driver for ARM Mali Midgard (T6xx, T7xx, T8xx) and
+  Bifrost (G3x, G5x, G7x) GPUs
+endef
+
+$(eval $(call KernelPackage,drm-panfrost))
+
 define KernelPackage/drm-radeon
   SUBMENU:=$(VIDEO_MENU)
   TITLE:=Radeon DRM support
@@ -503,6 +573,39 @@ endef
 
 $(eval $(call KernelPackage,drm-radeon))
 
+define KernelPackage/drm-sched
+  SUBMENU:=$(VIDEO_MENU)
+  TITLE:=DRM helper for ARM GPUs
+  DEPENDS:=+kmod-drm
+  HIDDEN:=1
+  KCONFIG:=CONFIG_DRM_SCHED
+  FILES:= \
+	$(LINUX_DIR)/drivers/gpu/drm/drm_shmem_helper.ko \
+	$(LINUX_DIR)/drivers/gpu/drm/scheduler/gpu-sched.ko
+  AUTOLOAD:=$(call AutoProbe,gpu-sched)
+endef
+
+$(eval $(call KernelPackage,drm-sched))
+
+define KernelPackage/drm-nouveau
+  SUBMENU:=$(VIDEO_MENU)
+  TITLE:=nouveau DRM support
+  DEPENDS:=@TARGET_x86 @DISPLAY_SUPPORT +kmod-drm-kms-helper +kmod-acpi-video
+  KCONFIG:=CONFIG_DRM_NOUVEAU \
+	NOUVEAU_DEBUG=5 \
+	NOUVEAU_DEBUG_DEFAULT=3 \
+	NOUVEAU_DEBUG_MMU=n \
+	DRM_NOUVEAU_BACKLIGHT=y
+  FILES:=$(LINUX_DIR)/drivers/gpu/drm/nouveau/nouveau.ko
+  AUTOLOAD:=$(call AutoProbe,nouveau)
+endef
+
+define KernelPackage/drm-nouveau/description
+  Direct Rendering Manager (DRM) support for NVIDIA Cuda Video Cards
+endef
+
+$(eval $(call KernelPackage,drm-nouveau))
+
 #
 # Video Capture
 #
@@ -510,7 +613,8 @@ $(eval $(call KernelPackage,drm-radeon))
 define KernelPackage/video-core
   SUBMENU:=$(VIDEO_MENU)
   TITLE=Video4Linux support
-  DEPENDS:=+PACKAGE_kmod-i2c-core:kmod-i2c-core
+  DEPENDS:=+PACKAGE_kmod-i2c-core:kmod-i2c-core \
+	+kmod-media-core
   KCONFIG:= \
 	CONFIG_MEDIA_SUPPORT \
 	CONFIG_MEDIA_CAMERA_SUPPORT=y \
@@ -519,7 +623,7 @@ define KernelPackage/video-core
 	CONFIG_MEDIA_PLATFORM_DRIVERS=y
   FILES:= \
 	$(LINUX_DIR)/drivers/media/$(V4L2_DIR)/videodev.ko
-  AUTOLOAD:=$(call AutoLoad,60,videodev)
+  AUTOLOAD:=$(call AutoLoad,60, videodev v4l2-common)
 endef
 
 define KernelPackage/video-core/description
@@ -1278,3 +1382,40 @@ define KernelPackage/video-tw686x/description
 endef
 
 $(eval $(call KernelPackage,video-tw686x))
+
+define KernelPackage/drm-i915
+  SUBMENU:=$(VIDEO_MENU)
+  TITLE:=Intel GPU drm support
+  DEPENDS:=@TARGET_x86 +kmod-drm-buddy +kmod-drm-ttm +kmod-drm-kms-helper +i915-firmware \
+	+kmod-drm-display-helper +kmod-acpi-video
+  KCONFIG:= \
+	CONFIG_INTEL_GTT \
+	CONFIG_DRM_I915 \
+	CONFIG_DRM_I915_CAPTURE_ERROR \
+	CONFIG_DRM_I915_COMPRESS_ERROR \
+	CONFIG_DRM_I915_DEBUG=n \
+	CONFIG_DRM_I915_DEBUG_GUC=n \
+	CONFIG_DRM_I915_DEBUG_MMIO=n \
+	CONFIG_DRM_I915_DEBUG_RUNTIME_PM=n \
+	CONFIG_DRM_I915_DEBUG_VBLANK_EVADE=n \
+	CONFIG_DRM_I915_GVT=y \
+	CONFIG_DRM_I915_LOW_LEVEL_TRACEPOINTS=n \
+	CONFIG_DRM_I915_SELFTEST=n \
+	CONFIG_DRM_I915_SW_FENCE_CHECK_DAG=n \
+	CONFIG_DRM_I915_SW_FENCE_DEBUG_OBJECTS=n \
+	CONFIG_DRM_I915_USERPTR=y \
+	CONFIG_DRM_I915_WERROR=n
+  FILES:= \
+      $(LINUX_DIR)/drivers/gpu/drm/i915/i915.ko
+  AUTOLOAD:=$(call AutoProbe,i915)
+endef
+
+define KernelPackage/drm-i915/description
+  Direct Rendering Manager (DRM) support for "Intel Graphics
+  Media Accelerator" or "HD Graphics" integrated graphics,
+  including 830M, 845G, 852GM, 855GM, 865G, 915G, 945G, 965G,
+  G35, G41, G43, G45 chipsets and Celeron, Pentium, Core i3,
+  Core i5, Core i7 as well as Atom CPUs with integrated graphics.
+endef
+
+$(eval $(call KernelPackage,drm-i915))
--- a/modules/virt.mk
+++ b/modules/virt.mk
@@ -140,3 +140,80 @@ define KernelPackage/vhost-net
 endef
 
 $(eval $(call KernelPackage,vhost-net))
+
+
+define KernelPackage/iommu_v2
+  SUBMENU:=Virtualization
+  TITLE:=IOMMU Version 2 driver
+  KCONFIG:=\
+     CONFIG_UACCE=n \
+     CONFIG_IOMMU_DEBUGFS=n \
+     CONFIG_INTEL_IOMMU=y \
+     CONFIG_INTEL_IOMMU_SVM=n \
+     CONFIG_INTEL_IOMMU_DEFAULT_ON=n \
+     CONFIG_INTEL_IOMMU_SCALABLE_MODE_DEFAULT_ON=n \
+     CONFIG_INTEL_TXT=n \
+     CONFIG_HYPERV_IOMMU=n \
+     CONFIG_IOMMU_SUPPORT=y \
+     CONFIG_IOMMU_DEFAULT_PASSTHROUGH=y \
+     CONFIG_AMD_IOMMU=y \
+     CONFIG_IRQ_REMAP=y \
+     CONFIG_AMD_IOMMU_V2=m
+  DEPENDS:= @PCI_SUPPORT @TARGET_x86_64
+  FILES:= $(LINUX_DIR)/drivers/iommu/amd/iommu_v2.ko
+  AUTOLOAD:=$(call AutoProbe,iommu_v2)
+endef
+
+define KernelPackage/iommu_v2/description
+  This option enables support for the AMD/INTEL IOMMUv2 features
+  of the IOMMU hardware. Select this option if you want
+  to use devices that support the PCI PRI and PASID interface.
+endef
+
+$(eval $(call KernelPackage,iommu_v2))
+
+
+define KernelPackage/vfio-mdev
+  SUBMENU:=Virtualization
+  TITLE:=VFIO driver support to to virtualize devices
+  DEPENDS:=@TARGET_x86_64
+  KCONFIG:=	\
+	CONFIG_IOMMU_API=y \
+	CONFIG_MMU=y \
+	CONFIG_VFIO=y \
+	CONFIG_VFIO_MDEV \
+	CONFIG_VFIO_MDEV_DEVICE \
+	CONFIG_VFIO_NOIOMMU=y \
+	CONFIG_VFIO_PCI=y \
+	CONFIG_VFIO_PCI_IGD=y
+  FILES:= \
+	$(LINUX_DIR)/drivers/vfio/mdev/mdev.ko \
+	$(LINUX_DIR)/drivers/vfio/mdev/vfio_mdev.ko@lt5.10
+  AUTOLOAD:=$(call AutoProbe,mdev vfio_mdev)
+endef
+
+define KernelPackage/vfio-mdev/description
+  Provides a framework to virtualize devices.
+endef
+
+$(eval $(call KernelPackage,vfio-mdev))
+
+
+define KernelPackage/i915-gvt
+  SUBMENU:=Virtualization
+  TITLE:=Enable KVM/VFIO support for Intel GVT-g
+  DEPENDS:=@TARGET_x86_64 +kmod-kvm-intel +kmod-drm-i915 +kmod-vfio-mdev
+  KCONFIG:= CONFIG_DRM_I915_GVT_KVMGT
+  FILES:= \
+      $(LINUX_DIR)/drivers/gpu/drm/i915/gvt/kvmgt.ko@lt5.18 \
+      $(LINUX_DIR)/drivers/gpu/drm/i915/kvmgt.ko@ge5.18
+  AUTOLOAD:=$(call AutoProbe,kvmgt)
+endef
+
+define KernelPackage/i915-gvt/description
+  Enable Intel GVT-g graphics virtualization technology host support with 
+  integrated graphics. With GVT-g, it's possible to have one integrated 
+  graphics device shared by multiple VMs under KVM.
+endef
+
+$(eval $(call KernelPackage,i915-gvt))
