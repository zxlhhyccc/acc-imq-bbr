--- a/drivers/net/wireless/ath/ath11k/core.c
+++ b/drivers/net/wireless/ath/ath11k/core.c
@@ -2578,13 +2578,13 @@ err_sc_free:
 }
 EXPORT_SYMBOL(ath11k_core_alloc);
 
-int ath11k_init(void)
+static int ath11k_init(void)
 {
 	return ath11k_debugfs_create();
 }
 module_init(ath11k_init);
 
-void ath11k_exit(void)
+static void ath11k_exit(void)
 {
 	ath11k_debugfs_destroy();
 }
--- a/drivers/net/wireless/ath/ath11k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath11k/dp_rx.c
@@ -1788,7 +1788,7 @@ struct htt_ppdu_stats_info *ath11k_dp_ht
 	return ppdu_info;
 }
 
-void ath11k_copy_to_delay_stats(struct ath11k_peer *peer,
+static void ath11k_copy_to_delay_stats(struct ath11k_peer *peer,
 				  struct htt_ppdu_user_stats* usr_stats)
 {
 	peer->ppdu_stats_delayba.reserved0 = usr_stats->rate.reserved0;
@@ -1803,7 +1803,7 @@ void ath11k_copy_to_delay_stats(struct a
 	peer->delayba_flag = true;
 }
 
-void ath11k_copy_to_bar(struct ath11k_peer *peer,
+static void ath11k_copy_to_bar(struct ath11k_peer *peer,
 			struct htt_ppdu_user_stats* usr_stats)
 {
 	usr_stats->rate.reserved0 = peer->ppdu_stats_delayba.reserved0;
@@ -6125,7 +6125,7 @@ static void ath11k_dp_rx_mon_dest_proces
 	}
 }
 
-void ath11k_dp_rx_mon_process_ulofdma(struct hal_rx_mon_ppdu_info *ppdu_info)
+static void ath11k_dp_rx_mon_process_ulofdma(struct hal_rx_mon_ppdu_info *ppdu_info)
 {
 	struct hal_rx_user_status *rx_user_status;
 	u32 num_users;
--- a/drivers/net/wireless/ath/ath11k/mac.c
+++ b/drivers/net/wireless/ath/ath11k/mac.c
@@ -719,7 +719,7 @@ u8 ath11k_mac_get_target_pdev_id(struct
 		return ar->ab->target_pdev_ids[0].pdev_id;
 }
 
-struct ath11k_vif *ath11k_mac_get_ap_arvif_by_addr(struct ath11k_base *ab,
+static struct ath11k_vif *ath11k_mac_get_ap_arvif_by_addr(struct ath11k_base *ab,
 						   const u8 *addr)
 {
 	int i;
--- a/drivers/net/wireless/ath/ath11k/nss.c
+++ b/drivers/net/wireless/ath/ath11k/nss.c
@@ -313,7 +313,7 @@ static void ath11k_nss_peer_mem_free(str
 
 /*-----------------------------Events/Callbacks------------------------------*/
 
-void ath11k_nss_wifili_event_receive(void *context, struct nss_wifili_msg *msg)
+static void ath11k_nss_wifili_event_receive(void *context, struct nss_wifili_msg *msg)
 {
 	u32 msg_type = msg->cm.type;
 	enum nss_cmn_response response = msg->cm.response;
@@ -424,7 +424,7 @@ void ath11k_nss_wifili_event_receive(voi
 	}
 }
 
-void ath11k_nss_process_mic_error(struct ath11k_base *ab, struct sk_buff *skb)
+static void ath11k_nss_process_mic_error(struct ath11k_base *ab, struct sk_buff *skb)
 {
 	struct ath11k_vif *arvif;
 	struct ath11k *ar;
@@ -531,7 +531,7 @@ static inline void ath11k_nss_wifili_ext
 	ath11k_nss_wifili_ext_callback_fn(ab, skb, napi);
 }
 
-void ath11k_nss_vdev_cfg_cb(void *app_data, struct nss_cmn_msg *msg)
+static void ath11k_nss_vdev_cfg_cb(void *app_data, struct nss_cmn_msg *msg)
 {
 	struct ath11k_vif *arvif = (struct ath11k_vif *)app_data;
 
@@ -1075,7 +1075,7 @@ ath11k_nss_ext_vdev_data_receive(struct
 #ifdef CPTCFG_ATH11K_NSS_MESH_SUPPORT
 /*------Mesh offload------*/
 
-void ath11k_nss_mesh_wifili_event_receive(void *app_data,
+static void ath11k_nss_mesh_wifili_event_receive(void *app_data,
 					  struct nss_cmn_msg *cmn_msg)
 {
 	struct nss_wifi_mesh_msg *msg = (struct nss_wifi_mesh_msg *)cmn_msg;
@@ -1936,7 +1936,7 @@ int ath11k_nss_dump_mpp_request(struct a
 	return 0;
 }
 
-void ath11k_nss_mpp_timer_cb(struct timer_list *timer)
+static void ath11k_nss_mpp_timer_cb(struct timer_list *timer)
 {
 	nss_wifi_mesh_msg_callback_t msg_cb;
 	struct arvif_nss *nss = from_timer(nss, timer,mpp_expiry_timer);
@@ -2607,7 +2607,7 @@ static void ath11k_nss_mesh_vdev_free(st
 }
 #endif
 
-void ath11k_nss_vdev_free(struct ath11k_vif *arvif)
+static void ath11k_nss_vdev_free(struct ath11k_vif *arvif)
 {
 	struct ath11k_base *ab = arvif->ar->ab;
 	nss_tx_status_t status;
@@ -2639,7 +2639,7 @@ void ath11k_nss_vdev_free(struct ath11k_
 }
 
 #ifdef CPTCFG_ATH11K_NSS_MESH_SUPPORT
-struct arvif_nss *ath11k_nss_find_arvif_by_if_num(int if_num)
+static struct arvif_nss *ath11k_nss_find_arvif_by_if_num(int if_num)
 {
 	struct arvif_nss *nss;
 
@@ -4624,7 +4624,7 @@ void ath11k_nss_peer_stats_enable(struct
 			     ATH11K_NSS_STATS_ENABLE);
 }
 
-int ath11k_nss_pdev_init(struct ath11k_base *ab, int radio_id)
+static int ath11k_nss_pdev_init(struct ath11k_base *ab, int radio_id)
 {
 	struct ath11k *ar = ab->pdevs[radio_id].ar;
 	struct nss_wifili_pdev_init_msg *pdevmsg;
@@ -4759,7 +4759,7 @@ dealloc:
 /* TODO : Check if start, reset and stop messages can be done using single function as
  * body is similar, having it now for clarity */
 
-int ath11k_nss_start(struct ath11k_base *ab)
+static int ath11k_nss_start(struct ath11k_base *ab)
 {
 	struct nss_wifili_msg *wlmsg = NULL;
 	nss_wifili_msg_callback_t msg_cb;
@@ -4924,7 +4924,7 @@ free:
 	return ret;
 }
 
-int ath11k_nss_pdev_deinit(struct ath11k_base *ab, int radio_id)
+static int ath11k_nss_pdev_deinit(struct ath11k_base *ab, int radio_id)
 {
 	struct ath11k *ar = ab->pdevs[radio_id].ar;
 	struct nss_wifili_pdev_deinit_msg *deinit;
--- a/drivers/net/wireless/ath/ath11k/nss.h
+++ b/drivers/net/wireless/ath/ath11k/nss.h
@@ -179,7 +179,7 @@ struct ath11k_nss_mpath_entry {
 	struct list_head list;
 	u32 num_entries;
 #ifdef CPTCFG_ATH11K_NSS_MESH_SUPPORT
-	struct nss_wifi_mesh_path_dump_entry mpath[0];
+	struct nss_wifi_mesh_path_dump_entry mpath[];
 #endif
 };
 
@@ -187,7 +187,7 @@ struct ath11k_nss_mpp_entry {
 	struct list_head list;
 	u32 num_entries;
 #ifdef CPTCFG_ATH11K_NSS_MESH_SUPPORT
-	struct nss_wifi_mesh_proxy_path_dump_entry mpp[0];
+	struct nss_wifi_mesh_proxy_path_dump_entry mpp[];
 #endif
 };
 
