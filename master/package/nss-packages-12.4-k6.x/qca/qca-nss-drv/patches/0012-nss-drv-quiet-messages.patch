--- a/nss_core.c
+++ b/nss_core.c
@@ -518,7 +518,7 @@ static uint32_t nss_soc_mem_info(void)
 		goto err_use_default_memsize;
 	}
 
-	nss_info_always("NSS DDR size is 0x%x\n", (uint32_t) resource_size(&r));
+	nss_info("NSS DDR size is 0x%x\n", (uint32_t) resource_size(&r));
 
 	return resource_size(&r);
 
@@ -563,7 +563,7 @@ static void nss_get_ddr_info(struct nss_
 		const __be32 *ppp = (__be32 *)of_get_property(node, "reg", &n_items);
 
 		n_items /= sizeof(ppp[0]);
-		nss_info_always("node size %d # items %d\n",
+		nss_info("node size %d # items %d\n",
 				of_n_size_cells(node), n_items);
 		if (ppp) {
 			if (n_items & 1) {	/* case 1 */
@@ -590,7 +590,7 @@ case3:
 				n_items = 0;
 			if (n_items) {
 				of_node_put(node);
-				nss_info_always("%s: %x %u (avl %u) items %d active_cores %d\n",
+				nss_info("%s: %x %u (avl %u) items %d active_cores %d\n",
 					name, mmu->start_address, mmu->ddr_size,
 					avail_ddr, n_items, mmu->num_active_cores);
 				/*
--- a/nss_hal/ipq50xx/nss_hal_pvt.c
+++ b/nss_hal/ipq50xx/nss_hal_pvt.c
@@ -449,15 +449,15 @@ static int __nss_hal_clock_configure(str
 		}
 	}
 
-	nss_info_always("Supported Frequencies - ");
+	nss_info("Supported Frequencies - ");
 	for (i = 0; i < NSS_FREQ_MAX_SCALE; i++) {
 		switch (nss_runtime_samples.freq_scale[i].frequency) {
 		case NSS_FREQ_850:
-			nss_info_always("850 MHz ");
+			nss_info("850 MHz ");
 			break;
 
 		case NSS_FREQ_1000:
-			nss_info_always("1 GHz ");
+			nss_info("1 GHz ");
 			break;
 
 		case NSS_FREQ_SCALE_NA:
--- a/nss_hal/ipq60xx/nss_hal_pvt.c
+++ b/nss_hal/ipq60xx/nss_hal_pvt.c
@@ -532,16 +532,16 @@ static int __nss_hal_clock_configure(str
 		}
 	}
 
-	nss_info_always("Supported Frequencies - ");
+	nss_info("Supported Frequencies - ");
 	for (i = 0; i < NSS_FREQ_MAX_SCALE; i++) {
 		if (nss_runtime_samples.freq_scale[i].frequency == NSS_FREQ_187) {
-			nss_info_always("187.2 MHz ");
+			nss_info("187.2 MHz ");
 		} else if (nss_runtime_samples.freq_scale[i].frequency == NSS_FREQ_748) {
-			nss_info_always("748.8 MHz ");
+			nss_info("748.8 MHz ");
 		} else if (nss_runtime_samples.freq_scale[i].frequency == NSS_FREQ_1497) {
-			nss_info_always("1.4976 GHz ");
+			nss_info("1.4976 GHz ");
 		} else if (nss_runtime_samples.freq_scale[i].frequency == NSS_FREQ_1689) {
-			nss_info_always("1.6896 GHz ");
+			nss_info("1.6896 GHz ");
 		} else {
 			nss_info_always("Error\nNo Table/Invalid Frequency Found\n");
 			return -EFAULT;
--- a/nss_hal/ipq806x/nss_hal_pvt.c
+++ b/nss_hal/ipq806x/nss_hal_pvt.c
@@ -1081,7 +1081,7 @@ clk_complete:
 		}
 	}
 
-	nss_info_always("Supported Frequencies - ");
+	nss_info("Supported Frequencies - ");
 	for (i = 0; i < NSS_FREQ_MAX_SCALE; i++) {
 		if (nss_runtime_samples.freq_scale[i].frequency == NSS_FREQ_110) {
 			nss_info_always("110Mhz ");
--- a/nss_hal/ipq807x/nss_hal_pvt.c
+++ b/nss_hal/ipq807x/nss_hal_pvt.c
@@ -570,16 +570,16 @@ static int __nss_hal_clock_configure(str
 		}
 	}
 
-	nss_info_always("Supported Frequencies - ");
+	nss_info("Supported Frequencies - ");
 	for (i = 0; i < NSS_FREQ_MAX_SCALE; i++) {
 		if (nss_runtime_samples.freq_scale[i].frequency == NSS_FREQ_187) {
-			nss_info_always("187.2 MHz ");
+			nss_info("187.2 MHz ");
 		} else if (nss_runtime_samples.freq_scale[i].frequency == NSS_FREQ_748) {
-			nss_info_always("748.8 MHz ");
+			nss_info("748.8 MHz ");
 		} else if (nss_runtime_samples.freq_scale[i].frequency == NSS_FREQ_1497) {
-			nss_info_always("1.4976 GHz ");
+			nss_info("1.4976 GHz ");
 		} else if (nss_runtime_samples.freq_scale[i].frequency == NSS_FREQ_1689) {
-			nss_info_always("1.6896 GHz ");
+			nss_info("1.6896 GHz ");
 		} else {
 			nss_info_always("Error\nNo Table/Invalid Frequency Found\n");
 			return -EFAULT;
--- a/nss_hal/ipq95xx/nss_hal_pvt.c
+++ b/nss_hal/ipq95xx/nss_hal_pvt.c
@@ -724,19 +724,19 @@ static int __nss_hal_clock_configure(str
 		}
 	}
 
-	nss_info_always("Supported Frequencies - ");
+	nss_info("Supported Frequencies - ");
 	for (i = 0; i < NSS_FREQ_MAX_SCALE; i++) {
 		switch (nss_runtime_samples.freq_scale[i].frequency) {
 		case NSS_FREQ_748:
-			nss_info_always("748 MHz ");
+			nss_info("748 MHz ");
 			break;
 
 		case NSS_FREQ_1497:
-			nss_info_always("1.497 GHz ");
+			nss_info("1.497 GHz ");
 			break;
 
 		case NSS_FREQ_1689:
-			nss_info_always("1.689 GHz ");
+			nss_info("1.689 GHz ");
 			break;
 
 		default:
--- a/nss_hal/nss_hal.c
+++ b/nss_hal/nss_hal.c
@@ -799,7 +799,7 @@ int nss_hal_probe(struct platform_device
 		nss_hal_enable_interrupt(nss_ctx, nss_ctx->int_ctx[i].shift_factor, NSS_HAL_SUPPORTED_INTERRUPTS);
 	}
 
-	nss_info_always("%px: All resources initialized and nss core%d has been brought out of reset", nss_ctx, nss_dev->id);
+	nss_info("%px: All resources initialized and nss core%d has been brought out of reset", nss_ctx, nss_dev->id);
 	goto out;
 
 err_register_irq:
--- a/nss_meminfo.c
+++ b/nss_meminfo.c
@@ -408,7 +408,7 @@ static bool nss_meminfo_init_block_lists
 
 		if (strcmp(r->name, "profile_dma_ctrl") == 0) {
 			mem_ctx->sdma_ctrl = kern_addr;
-		nss_info_always("%px: set sdma %px\n", nss_ctx, kern_addr);
+		nss_info("%px: set sdma %px\n", nss_ctx, kern_addr);
 		}
 
 		/*
@@ -799,6 +799,6 @@ bool nss_meminfo_init(struct nss_ctx_ins
 
 	nss_meminfo_init_debugfs(nss_ctx);
 
-	nss_info_always("%px: meminfo init succeed\n", nss_ctx);
+	nss_info("%px: meminfo init succeed\n", nss_ctx);
 	return true;
 }
