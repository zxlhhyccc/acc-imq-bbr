From 1e47f8144d8ff9954e693efa87cf8cc015c28bd2 Mon Sep 17 00:00:00 2001
From: Tian Yang <tiany@codeaurora.org>
Date: Tue, 29 Dec 2015 15:20:54 -0600
Subject: [PATCH] skbuff_debug: track sum of skb while not in use

Add a simple sum check across the range of the SKB struct
to see if something else modified after it was freed to the
SKB recycler.

Right now, we just check for the SKB recycler as freeing to
the slab tends to let other changes to the struct occur.

Change-Id: I41b4163bf735cc047dd7150cb009098665c9b94e
Signed-off-by: Matthew McClintock <mmcclint@codeaurora.org>
Signed-off-by: Casey Chen <kexinc@codeaurora.org>
---
 include/linux/skbuff.h | 1 +
 1 file changed, 1 insertion(+)

--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -1071,6 +1071,7 @@ struct sk_buff {
 #define DEBUG_OBJECTS_SKBUFF_STACKSIZE	20
 	void			*free_addr[DEBUG_OBJECTS_SKBUFF_STACKSIZE];
 	void			*alloc_addr[DEBUG_OBJECTS_SKBUFF_STACKSIZE];
+	u32			sum;
 #endif
 };
 
