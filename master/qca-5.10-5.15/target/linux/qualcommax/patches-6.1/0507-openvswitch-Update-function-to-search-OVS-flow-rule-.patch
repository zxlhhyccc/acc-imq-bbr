From d431d35f0c9312fddc08b179802aa7674820f0b8 Mon Sep 17 00:00:00 2001
From: Suman Ghosh <sumaghos@codeaurora.org>
Date: Wed, 4 Nov 2020 13:34:19 +0530
Subject: [PATCH] openvswitch: Update function to search OVS flow rule by MAC
 address for Multicast

Change-Id: Ie8f65c22dd7578a9a09370a10f67333228d45722
Signed-off-by: Pavithra R <quic_pavir@quicinc.com>
---
 net/openvswitch/datapath.c | 40 +++++++++++++++++++++++++++-----------
 net/openvswitch/datapath.h |  3 ++-
 2 files changed, 31 insertions(+), 12 deletions(-)

--- a/net/openvswitch/datapath.c
+++ b/net/openvswitch/datapath.c
@@ -2590,7 +2590,8 @@ EXPORT_SYMBOL(ovs_accel_flow_find);
 
 /* Find datapath flow rule using MAC addresses*/
 struct sw_flow *ovs_accel_flow_find_by_mac(void *dp_inst,
-						struct net_device *br_dev,
+						struct net_device *indev,
+						struct net_device *outdev,
 						uint8_t *smac, uint8_t *dmac, uint16_t type)
 {
 	struct datapath *dp = dp_inst;
@@ -2598,8 +2599,8 @@ struct sw_flow *ovs_accel_flow_find_by_m
 	struct sw_flow *flow = NULL;
 	struct sw_flow_actions *sf_acts;
 	const struct nlattr *a;
+	struct vport *vport;
 	bool flow_found = false;
-	int egress_ports = 0;
 	int rem;
 	int i;
 
@@ -2630,13 +2631,35 @@ found:
 	}
 
 	/*
-	 * Flow is found, check if output action is br_dev
+	 * Flow is found, check if ingress port matches indev
+	 */
+	if (!indev) {
+		goto check_outdev;
+	}
+
+	vport = ovs_vport_ovsl_rcu(dp, flow->key.phy.in_port);
+	if (!vport || (indev != vport->dev)) {
+		rcu_read_unlock();
+		return NULL;
+	}
+
+check_outdev:
+	/*
+	 * if outdev is NULL, then the API is called
+	 * to find the flow only
+	 */
+	if (!outdev) {
+		rcu_read_unlock();
+		return flow;
+	}
+
+	/*
+	 * Flow is found, check if output action is outdev
 	 */
 	flow_found = false;
 	sf_acts = rcu_dereference(flow->sf_acts);
 	for (a = sf_acts->actions, rem = sf_acts->actions_len; rem > 0;
 			a = nla_next(a, &rem)) {
-		struct vport *vport;
 		int port_no;
 
 		if (nla_type(a) != OVS_ACTION_ATTR_OUTPUT)
@@ -2645,17 +2668,12 @@ found:
 		port_no = nla_get_u32(a);
 		vport = ovs_vport_ovsl_rcu(dp, port_no);
 
-		if (vport && (br_dev == vport->dev)) {
+		if (vport && (outdev == vport->dev)) {
 			flow_found = true;
 		}
-		egress_ports++;
 	}
 
-	/*
-	 * flow should be unicast and egress port should be
-	 * bridge interface.
-	 */
-	if (!flow_found || (egress_ports != 1))
+	if (!flow_found)
 		flow = NULL;
 
 	rcu_read_unlock();
--- a/net/openvswitch/datapath.h
+++ b/net/openvswitch/datapath.h
@@ -315,7 +315,8 @@ struct net_device *ovs_accel_egress_dev_
 					     struct sk_buff *skb);
 
 struct sw_flow *ovs_accel_flow_find_by_mac(void *dp_inst,
-						struct net_device *br_dev,
+						struct net_device *indev,
+						struct net_device *outdev,
 						uint8_t *smac, uint8_t *dmac, uint16_t type);
 
 /* 'KEY' must not have any bits set outside of the 'MASK' */
