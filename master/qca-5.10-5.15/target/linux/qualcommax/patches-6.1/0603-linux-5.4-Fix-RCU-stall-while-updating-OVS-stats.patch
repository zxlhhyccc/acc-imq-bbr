From ef7690bc1d9439fc65cefc29a4275c8080424efe Mon Sep 17 00:00:00 2001
From: Suruchi Suman <quic_surusuma@quicinc.com>
Date: Mon, 22 May 2023 19:40:11 +0530
Subject: [PATCH] [linux-5.4] Fix RCU stall while updating OVS stats

Reason of the stall was two functions taking the same stats lock() but one is called from
process context while other is called from bottom half context. So, this change will make sure
that stats are updated in bottom half context by all functions.

Change-Id: If27ea71734f477174dbe7669521d7bec55ba038e
Signed-off-by: Suruchi Suman <quic_surusuma@quicinc.com>
---
 net/openvswitch/datapath.c | 4 ++--
 net/openvswitch/flow.c     | 6 +++---
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/net/openvswitch/datapath.c b/net/openvswitch/datapath.c
index 327b2d135a16..ccd3b5cdc012 100644
--- a/net/openvswitch/datapath.c
+++ b/net/openvswitch/datapath.c
@@ -2711,7 +2711,7 @@ int ovs_accel_flow_stats_update(void *dp_inst, void *out_vport,
 
 	rcu_read_unlock();
 
-	spin_lock(&stats->lock);
+	spin_lock_bh(&stats->lock);
 	stats->used = jiffies;
 	stats->packet_count += pkts;
 	stats->byte_count += bytes;
@@ -2734,7 +2734,7 @@ int ovs_accel_flow_stats_update(void *dp_inst, void *out_vport,
 	dp_stats->n_cache_hit += n_cache_hit * pkts;
 	u64_stats_update_end(&dp_stats->syncp);
 
-	spin_unlock(&stats->lock);
+	spin_unlock_bh(&stats->lock);
 	return 0;
 }
 EXPORT_SYMBOL(ovs_accel_flow_stats_update);
diff --git a/net/openvswitch/flow.c b/net/openvswitch/flow.c
index e20d1a973417..3fc9a002dc4a 100644
--- a/net/openvswitch/flow.c
+++ b/net/openvswitch/flow.c
@@ -69,13 +69,13 @@ void ovs_flow_stats_update(struct sw_flow *flow, __be16 tcp_flags,
 
 	/* Check if already have CPU-specific stats. */
 	if (likely(stats)) {
-		spin_lock(&stats->lock);
+		spin_lock_bh(&stats->lock);
 		/* Mark if we write on the pre-allocated stats. */
 		if (cpu == 0 && unlikely(flow->stats_last_writer != cpu))
 			flow->stats_last_writer = cpu;
 	} else {
 		stats = rcu_dereference(flow->stats[0]); /* Pre-allocated. */
-		spin_lock(&stats->lock);
+		spin_lock_bh(&stats->lock);
 
 		/* If the current CPU is the only writer on the
 		 * pre-allocated stats keep using them.
@@ -120,7 +120,7 @@ void ovs_flow_stats_update(struct sw_flow *flow, __be16 tcp_flags,
 	stats->byte_count += len;
 	stats->tcp_flags |= tcp_flags;
 unlock:
-	spin_unlock(&stats->lock);
+	spin_unlock_bh(&stats->lock);
 }
 
 /* Must be called with rcu_read_lock or ovs_mutex. */
-- 
2.34.1

