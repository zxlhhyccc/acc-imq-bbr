From 9a3850e377ff8b567d7edeb64cf7b6d6eda817f2 Mon Sep 17 00:00:00 2001
From: Tian Yang <tiany@codeaurora.org>
Date: Thu, 1 Oct 2015 16:31:33 -0500
Subject: [PATCH] skbuff_debug: track functions that free SKBs

This adds a member to struct skbuff if
CONFIG_DEBUG_OBJECTS_SKBUFF is turned on that tracks
the caller that last free'd the SKB.

This should work for SLAB and SKB recycler free since this
element of the SKB should not get overwritten when allocated
from either pool of objects.

Performance info for before/after:

Before:

 speed was 53.45 Mbit/s
 cycles = 97974050028 (per pkt = 35368.7482818)
 instructions = 26722549696 (per pkt = 9646.87213988)
 dcache_misses = 512380452 (per pkt = 184.969950983)
 icache_misses = 1268005369 (per pkt = 457.75144238)

After:

 speed was 48.91 Mbit/s
 cycles = 98737753294 (per pkt = 38614.9009095)
 instructions = 25770915740 (per pkt = 10078.6307613)
 dcache_misses = 589106068 (per pkt = 230.39082501)
 icache_misses = 1146428790 (per pkt = 448.351645128)

Change-Id: Ie9e854015dc040fc30b97f89dd0663601b8f0344
Signed-off-by: Matthew McClintock <mmcclint@codeaurora.org>
Signed-off-by: Casey Chen <kexinc@codeaurora.org>
---
 include/linux/skbuff.h | 4 ++++
 1 file changed, 4 insertions(+)

--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -1066,6 +1066,10 @@ struct sk_buff {
 	/* only useable after checking ->active_extensions != 0 */
 	struct skb_ext		*extensions;
 #endif
+
+#ifdef CONFIG_DEBUG_OBJECTS_SKBUFF
+	void			*free_addr;
+#endif
 };
 
 /* if you move pkt_type around you also must adapt those constants */
