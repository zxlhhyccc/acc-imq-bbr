From 97cdf3e256e707ee1eaa3129f7f9e762bd83e426 Mon Sep 17 00:00:00 2001
From: Subhash Kumar Katnapally <quic_skatnapa@quicinc.com>
Date: Thu, 19 Jan 2023 20:23:27 +0530
Subject: [PATCH] net: OVS: Avoid egress port return during learning

When ecm queries for egress port, make sure the flow
rule has only single interface as actions. If the destination
mac address is not learnt or existing port goes away, ovs would
add try forwarding the flow on all ports and hence has multiple
actions. This patch returns NULL if there are more than one
device.

Change-Id: Iebe7dfe893e2823a30d4a68ffb55cd2816452624
Signed-off-by: Subhash Kumar Katnapally <quic_skatnapa@quicinc.com>
Signed-off-by: Pavithra R <quic_pavir@quicinc.com>
---
 net/openvswitch/datapath.c | 22 ++++++++++++++++++----
 1 file changed, 18 insertions(+), 4 deletions(-)

--- a/net/openvswitch/datapath.c
+++ b/net/openvswitch/datapath.c
@@ -2771,6 +2771,7 @@ struct net_device *ovs_accel_egress_dev_
 	struct net_device *dev;
 	const struct nlattr *a;
 	int rem;
+	int egress_cnt = 0;
 
 	rcu_read_lock();
 	flow = ovs_accel_flow_find(dp_inst, key);
@@ -2787,16 +2788,29 @@ struct net_device *ovs_accel_egress_dev_
 		case OVS_ACTION_ATTR_OUTPUT:
 			port_no = nla_get_u32(a);
 			vport = ovs_vport_ovsl_rcu(dp, port_no);
-			if (!vport) {
+
+			/*
+			 * Avoid offloading flows with internal port as egress port
+			 */
+			if (!vport || (vport->ops->type == OVS_VPORT_TYPE_INTERNAL)) {
 				goto done;
 			}
 
 			dev = vport->dev;
-			dev_hold(dev);
-			rcu_read_unlock();
-			return dev;
+			egress_cnt++;
 		}
 	}
+
+	/*
+	 * Return dev only if flow is not a broadcast i.e.
+	 * there is only one egress interface for the flow
+	 */
+	if (egress_cnt == 1) {
+		dev_hold(dev);
+		rcu_read_unlock();
+		return dev;
+	}
+
 done:
 	rcu_read_unlock();
 	return NULL;
